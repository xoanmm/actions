name: Build and Push Image

on:
  workflow_call:
    inputs:
      dockerfile:
        description: 'Path to the Dockerfile. (default ./Dockerfile)'
        required: false
        type: string
        default: Dockerfile
      docker-context:
        description: 'Build context is the set of files located in the specified PATH or URL (default .)'
        required: false
        type: string
        default: '.'
      node-version:
        description: 'Node version to be used'
        required: false
        type: number
        default: 20

jobs:

  semantic-release:
    name: Semantic Release
    runs-on: ubuntu-24.04

    permissions:
      contents: write
      packages: write
      pull-requests: read
      issues: write
      id-token: write
      attestations: write

    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Unshallow
        run: git fetch --prune --unshallow

      - name: Install jq
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: Setup Node.js
        uses: actions/setup-node@v5.0.0
        with:
          node-version: ${{ inputs.node-version }}
      
      - name: Get npm cache directory
        id: npm-cache-dir
        shell: bash
        run: echo "dir=$(npm config get cache)" >> ${GITHUB_OUTPUT}

      - uses: actions/cache@v4
        id: npm-cache # use this to check for `cache-hit` ==> if: steps.npm-cache.outputs.cache-hit != 'true'
        with:
          path: ${{ steps.npm-cache-dir.outputs.dir }}
          key: ${{ runner.os }}-node-${{ hashFiles('**/package.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: npm install

      - name: Create empty semantic_release_version.txt file
        run: touch semantic_release_version.txt

      - name: Release
        id: semantic_release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npx semantic-release --debug

      - name: Get the version
        id: get_version
        run: |
          echo "VERSION=$(cat semantic_release_version.txt)" >> $GITHUB_ENV

      - name: Set up QEMU
        if: ${{ env.VERSION != '' }}
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        if: ${{ env.VERSION != '' }}
        uses: docker/setup-buildx-action@v3.11.1
        with:
          platforms: linux/amd64,linux/arm64

      - name: Docker Login in GHCR
        uses: docker/login-action@v3.6.0
        if: ${{ env.VERSION != '' }}
        id: configure-login-ghcr
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          logout: false

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5.8.0
        if: ${{ env.VERSION != '' }}
        with:
          images: |
            ghcr.io/${{ github.repository }}
          tags: |
            type=semver,pattern={{version}},value=${{ env.VERSION }}

      - name: Build and push
        uses: docker/build-push-action@v6.18.0
        id: build-push
        if: ${{ env.VERSION != '' }}
        with:
          push: ${{ github.event_name != 'pull_request' }}
          file: ${{ inputs.dockerfile  }}
          context: ${{ inputs.docker-context  }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

    outputs:
      version: ${{ env.VERSION }}
