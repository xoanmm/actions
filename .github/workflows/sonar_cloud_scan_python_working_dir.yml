name: Sonar Cloud Scan for Python Code with working directory

on:
  workflow_call:
    inputs:
      artifact-coverage-name:
        description: 'Artifact coverage name for unit tests'
        required: false
        type: string
        default: 'coverage'
      artifact-coverage-path:
        description: 'Artifact coverage path for unit tests'
        required: false
        type: string
        default: 'coverage.xml'
      python-version:
        description: 'Python version to be configured'
        required: false
        type: string
        default: '3.13'
      sonar-qualitygate-wait:
        description: 'Value for sonar.qualitygate.wait argument to be used by sonarqube-scan-action'
        required: false
        type: boolean
        default: false
      working-directory:
        description: 'Path to the working directory'
        required: true
        type: string

jobs:
  sonar-scan:
    runs-on: ubuntu-24.04
    name: Sonar Cloud Scan
    defaults:
      run:
        working-directory: ${{ inputs.working-directory }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Download artifact for coverage
        uses: actions/download-artifact@v5.0.0
        with:
          name: ${{ inputs.artifact-coverage-name }}

      - name: Get repository basename
        run: |
          echo "REPO_NAME=$(basename ${{ github.repository }})" >> $GITHUB_ENV

      - name: SonarCloud Scan
        uses: sonarsource/sonarqube-scan-action@v6.0.0
        with:
          args: >
            "-Dsonar.projectKey=${{ github.repository_owner }}_${{ env.REPO_NAME }}"
            "-Dsonar.organization=${{ github.repository_owner }}"
            "-Dsonar.python.coverage.reportPaths=${{ inputs.artifact-coverage-path }}"
            "-Dsonar.test.exclusions=tests/**"
            "-Dsonar.tests=tests/"
            "-Dsonar.verbose=true"
            "-Dsonar.qualitygate.wait=${{ inputs.sonar-qualitygate-wait }}"
            "-Dsonar.python.version=${{ inputs.python-version }}"
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}