name: Validate Dockerfile

on:
  workflow_call:
    inputs:
      dockerfile:
        description: 'Path to the Dockerfile. (default ./Dockerfile)'
        required: false
        type: string
        default: Dockerfile
      dockerfile-context:
        description: 'Build context is the set of files located in the specified PATH or URL (default .)'
        required: false
        type: string
        default: '.'
      dockerfile-filter:
        description: 'Filter to be used to locate dockerfile'
        required: false
        type: string
        default: 'Dockerfile*'
      docker-push:
        description: 'Wheter to push or not the image'
        required: false
        type: boolean
        default: false

jobs:
  validate-dockerfile:
    name: Validate dockerfile
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4

      - uses: dorny/paths-filter@v3
        id: filter
        with:
          filters: |
            dockerfile:
              - '${{ inputs.dockerfile-filter }}'

      - name: Set up QEMU
        if: steps.filter.outputs.dockerfile == 'true'
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        if: steps.filter.outputs.dockerfile == 'true'
        uses: docker/setup-buildx-action@v3.8.0
        with:
          platforms: linux/amd64,linux/arm64

      - name: Docker Login in GHCR
        uses: docker/login-action@v3.3.0
        if: steps.filter.outputs.dockerfile == 'true'
        id: configure-login-ghcr
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5.6.1
        if: steps.filter.outputs.dockerfile == 'true'
        with:
          images: |
            ghcr.io/${{ github.repository }}

      - name: Build and push
        uses: docker/build-push-action@v6.10.0
        id: build-push
        if: steps.filter.outputs.dockerfile == 'true'
        with:
          push: ${{ inputs.docker-push  }}
          file: ${{ inputs.dockerfile  }}
          context: ${{ inputs.dockerfile-context  }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }